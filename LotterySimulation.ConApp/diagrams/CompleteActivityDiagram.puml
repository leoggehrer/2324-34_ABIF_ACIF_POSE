@startuml CompleteActivityDiagram
header
generated on 09/04/2024 14:50:34
end header
title CompleteActivityDiagram
start
note right:  Program.Main
#LightSkyBlue:int[] results\nint[] correctResult = { 400874, 423358, 151635, 22687, 1416, 30, 0 }\nint[] thrownNumbers\nint[,] lottoTipps = CreateTipps(TIPPS_COUNT)\nStopwatch stopWatch = new Stopwatch();
#WhiteSmoke:PrintLine("Lottosimulator");
#WhiteSmoke:PrintLine("==============");
#WhiteSmoke:PrintLine();
#WhiteSmoke:PrintLine("{0} Tippkolonnen", lottoTipps.GetLength(0));
#WhiteSmoke:PrintLine();
#WhiteSmoke:thrownNumbers = CreateTip();
#WhiteSmoke:stopWatch.Start();
#WhiteSmoke:results = AnalyzeLottery(lottoTipps, thrownNumbers);
#WhiteSmoke:stopWatch.Stop();
#WhiteSmoke:PrintResult(results);
#WhiteSmoke:PrintLine();
if (EqualsTo(results, correctResult)) then (<color:green>yes)
        #WhiteSmoke:PrintLine("Das Ergebnis ist richtig!");
    else (<color:red>no)
            #WhiteSmoke:PrintLine("FÃ¼r 1 Mio Versuche ist das Ergebnis falsch!");
endif
#WhiteSmoke:PrintLine("Rechenzeit: {0} Millisekunden!", stopWatch.ElapsedMilliseconds);
#WhiteSmoke:PrintLine("Exit with Enter...");
#WhiteSmoke:ReadLine();
stop
start
note right:  Program.PrintResult
#LightGreen:Params(int[] results);
#LightSkyBlue:int resultSum = 0;
#LightSkyBlue:int i = TIP_SIZE;
while (i >= 0) is (<color:green>yes)
        #WhiteSmoke:PrintLine($"{i}er: {results[i], 10}");
        #WhiteSmoke:resultSum += results[i];
:i--;
endwhile (<color:red>no)
#WhiteSmoke:PrintLine(new string('-' , 20));
#WhiteSmoke:PrintLine($"Summe: {resultSum, 8}");
stop
start
note right:  Program.EqualsTo
#LightGreen:Params(int[] arrayOne,int[] arrayTwo);
#LightSkyBlue:int idx = 0\nbool result = arrayOne.Length == arrayTwo.Length;
while (result && idx < arrayOne.Length) is (<color:green>yes)
        #WhiteSmoke:result = arrayOne[idx] == arrayTwo[idx];
        #WhiteSmoke:idx++;
endwhile (<color:red>no)
#Lavender:return result;
stop
start
note right:  Program.AnalyzeLottery
#LightGreen:Params(int[,] lottoTipps,int[] thrownNumbers);
#LightSkyBlue:int[] result = new int[TIP_SIZE + 1];
#LightSkyBlue:int i = 0;
while (i < lottoTipps.GetLength(0)) is (<color:green>yes)
        #LightSkyBlue:int hits = CountNumberOfHits(i, lottoTipps, thrownNumbers);
        #WhiteSmoke:result[hits]++;
:i++;
endwhile (<color:red>no)
#Lavender:return result;
stop
start
note right:  Program.CountNumberOfHits
#LightGreen:Params(int index,int[,] tipps,int[] thrownNumbers);
#LightSkyBlue:int result = 0;
#LightSkyBlue:int i = 0;
while (i < tipps.GetLength(1)) is (<color:green>yes)
        #LightSkyBlue:int j = 0;
        while (j < thrownNumbers.Length) is (<color:green>yes)
                if (tipps[index, i] == thrownNumbers[j]) then (<color:green>yes)
                        #WhiteSmoke:result++;
                endif
        :j++;
        endwhile (<color:red>no)
:i++;
endwhile (<color:red>no)
#Lavender:return result;
stop
start
note right:  Program.CreateTipps
#LightGreen:Params(int countTipps);
#LightSkyBlue:int[,] result = new int[countTipps, TIP_SIZE];
#LightSkyBlue:int tippNummer = 0;
while (tippNummer < countTipps) is (<color:green>yes)
        #LightSkyBlue:int[] tip = CreateTip();
        #LightSkyBlue:int zahlNummer = 0;
        while (zahlNummer < 6) is (<color:green>yes)
                #WhiteSmoke:result[tippNummer, zahlNummer] = tip[zahlNummer];
        :zahlNummer++;
        endwhile (<color:red>no)
:tippNummer++;
endwhile (<color:red>no)
#Lavender:return result;
stop
start
note right:  Program.CreateTip
#LightSkyBlue:int[] result = new int[TIP_SIZE]\nint number\nbool found;
#LightSkyBlue:int i = 0;
while (i < result.Length) is (<color:green>yes)
        repeat
                #WhiteSmoke:found = false;
                #WhiteSmoke:number = random.Next(MIN_NUMBER, MAX_NUMBER + 1);
                #LightSkyBlue:int j = 0;
                while (j < i) is (<color:green>yes)
                        if (number == result[j]) then (<color:green>yes)
                                #WhiteSmoke:found = true;
                        endif
                :j++;
                endwhile (<color:red>no)
        repeat while (found) is (<color:green>yes)
        #WhiteSmoke:result[i] = number;
:i++;
endwhile (<color:red>no)
#Lavender:return result;
stop
footer
generated with the DiagramCreator by Prof.Gehrer
end footer
@enduml
