@startuml Program.AddBinaryNumbers
title Program.AddBinaryNumbers
start
#LightGreen:Params(string number1,string number2);
#LightSkyBlue:bool carry = false\nstring result = string.Empty\nint numberLength = Math.Max(number1.Length, number2.Length) + 1;
#WhiteSmoke:number1 = ExpandNumber(number1, numberLength);
#WhiteSmoke:number2 = ExpandNumber(number2, numberLength);
#LightSkyBlue:int i = numberLength - 1;
while (i >= 0) is (<color:green>yes)
        if (carry == false && number1[i] == '0' && number2[i] == '0') then (<color:green>yes)
                #WhiteSmoke:result = '0' + result;
            else (<color:red>no)
                if (carry == false && number1[i] == '1' && number2[i] == '0') then (<color:green>yes)
                        #WhiteSmoke:result = '1' + result;
                    else (<color:red>no)
                        if (carry == false && number1[i] == '0' && number2[i] == '1') then (<color:green>yes)
                                #WhiteSmoke:result = '1' + result;
                            else (<color:red>no)
                                if (carry == false && number1[i] == '1' && number2[i] == '1') then (<color:green>yes)
                                        #WhiteSmoke:carry = true;
                                        #WhiteSmoke:result = '0' + result;
                                    else (<color:red>no)
                                        if (carry && number1[i] == '0' && number2[i] == '0') then (<color:green>yes)
                                                #WhiteSmoke:carry = false;
                                                #WhiteSmoke:result = '1' + result;
                                            else (<color:red>no)
                                                if (carry && number1[i] == '1' && number2[i] == '0') then (<color:green>yes)
                                                        #WhiteSmoke:result = '0' + result;
                                                    else (<color:red>no)
                                                        if (carry && number1[i] == '0' && number2[i] == '1') then (<color:green>yes)
                                                                #WhiteSmoke:result = '0' + result;
                                                            else (<color:red>no)
                                                                if (carry && number1[i] == '1' && number2[i] == '1') then (<color:green>yes)
                                                                        #WhiteSmoke:result = '1' + result;
                                                                endif
                                                        endif
                                                endif
                                        endif
                                endif
                        endif
                endif
        endif
:i--;
endwhile (<color:red>no)
#Lavender:return ShrinkNumber(result);
stop
@enduml
