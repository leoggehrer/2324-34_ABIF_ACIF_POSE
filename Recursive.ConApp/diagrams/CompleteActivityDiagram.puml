@startuml CompleteActivityDiagram
header
generated on 01.05.2024 20:56:57
end header
title CompleteActivityDiagram
start
note right:  Program.Main
#LightGreen:Params(string[] args);
#LightSkyBlue:int i = 1;
while (i <= 10) is (<color:green>yes)
        #WhiteSmoke:PrintLine($"Recursive {i, -3}: = {FibonacciRecursive(i)}");
        #WhiteSmoke:PrintLine($"Iterative {i, -3}: = {FibonacciIterative(i)}");
:i++;
endwhile (<color:red>no)
#WhiteSmoke:PrintLine();
#WhiteSmoke:PrintLine("Press enter to exit: ");
#WhiteSmoke:ReadLine();
stop
start
note right:  Program.FibonacciRecursive
#LightGreen:Params(int n);
#LightYellow:if (n < 2) then (<color:green>yes)
        #Lavender:return n;
    else (<color:red>no)
            #Lavender:return FibonacciRecursive(n - 1) + FibonacciRecursive(n - 2);
endif
' CustomUML
header: Rekursive LÃ¶sung der Fibonacci-Berechnung
' CustomUML
stop
start
note right:  Program.FibonacciIterative
#LightGreen:Params(int n);
#LightSkyBlue:long result = 1\nlong n_2 = 1;
while (n > 2) is (<color:green>yes)
        #WhiteSmoke:result = result + n_2;
        #WhiteSmoke:n_2 = result - n_2;
        #WhiteSmoke:n--;
endwhile (<color:red>no)
#Lavender:return result;
stop
footer
generated with the DiagramCreator by Prof.Gehrer
end footer
@enduml
