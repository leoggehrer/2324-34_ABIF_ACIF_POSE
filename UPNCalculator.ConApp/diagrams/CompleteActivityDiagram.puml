@startuml CompleteActivityDiagram
header
generated on 04.06.2024 09:28:15
end header
title CompleteActivityDiagram
start
note right:  ObjectDiagram.Create
#LightGreen:Params(object obj,params string[] notes);
#WhiteSmoke:diagramCreator.CreateToFile(obj, notes);
stop
start
note right:  Program.Main
#LightGreen:Params(string[] args);
#LightSkyBlue:string input;
#WhiteSmoke:PrintLine("********************");
#WhiteSmoke:PrintLine("* UPNCalculator *");
#WhiteSmoke:PrintLine("********************");
#WhiteSmoke:PrintLine();
repeat
  #WhiteSmoke:Print("Arithmetic operation (form 3 5 + 2 *) [Enter...Exit]: ");
  #WhiteSmoke:input = ReadLine();
  #LightYellow:if (input != string.Empty) then (<color:green>yes)
    #WhiteSmoke:PrintLine($"{input} = {result}");
  endif
repeat while (input != string.Empty) is (<color:green>yes)
stop
start
note right:  Program.Parse
#LightGreen:Params(string input);
#LightSkyBlue:string[] parts = input.Split(' ', StringSplitOptions.RemoveEmptyEntries)\nStack stack= new Stack();
while (i < parts.Length) is (<color:green>yes)
  #LightYellow:if (parts[i] == "+") then (<color:green>yes)
    #WhiteSmoke:stack.Push(a + b);
    else (<color:red>no)
      #LightYellow:if (parts[i] == "-") then (<color:green>yes)
        #WhiteSmoke:stack.Push(a - b);
        else (<color:red>no)
          #LightYellow:if (parts[i] == "*") then (<color:green>yes)
            #WhiteSmoke:stack.Push(a * b);
            else (<color:red>no)
              #LightYellow:if (parts[i] == "/") then (<color:green>yes)
                #WhiteSmoke:stack.Push(a / b);
                else (<color:red>no)
                  #LightYellow:if (double.TryParse(parts[i], out double opd)) then (<color:green>yes)
                    #WhiteSmoke:stack.Push(opd);
                  endif
              endif
          endif
      endif
  endif
:i++;
endwhile (<color:red>no)
#Lavender:return stack.Pop();
stop
start
note right:  Stack.Push
#LightGreen:Params(double data);
#WhiteSmoke:_head = new Element(data, _head);
#WhiteSmoke:ObjectDiagram.Create(this, $"title Stack after Push({data})");
stop
start
note right:  Stack.Pop
#LightYellow:if (IsEmpty) then (<color:green>yes)
  #Red:throw new InvalidOperationException("title Stack is empty!");
  kill
endif
#LightSkyBlue:Element tmp = _head!;
#WhiteSmoke:_head = tmp.Next;
#WhiteSmoke:ObjectDiagram.Create(this, $"title Stack after Pop() => {tmp.Data}");
#Lavender:return tmp.Data;
stop
footer
generated with the DiagramCreator by Prof.Gehrer
end footer
@enduml
