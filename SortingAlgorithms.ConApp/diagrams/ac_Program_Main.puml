@startuml Program.Main
title Program.Main
start
#LightGreen:Params(string[] args);
#LightSkyBlue:int TEST_SIZE = 20\nint PERFORMANCE_SIZE = 50_000\nint[] array;
#WhiteSmoke:PrintLine("Sort-Algorithmen!");
#WhiteSmoke:PrintLine("=================");
#WhiteSmoke:PrintLine();
#WhiteSmoke:PrintLine("Test BruteForceSort");
#WhiteSmoke:array = CreateRandomArray(TEST_SIZE);
#WhiteSmoke:PrintArray("Unsorted:", array);
#WhiteSmoke:Sort.BruteForceSort(array);
#WhiteSmoke:PrintArray("BruteForceSort:", array);
#WhiteSmoke:PrintLine();
#WhiteSmoke:PrintLine("Test BubbleSort");
#WhiteSmoke:array = CreateRandomArray(TEST_SIZE);
#WhiteSmoke:PrintArray("Unsorted:", array);
#WhiteSmoke:Sort.BubbleSort(array);
#WhiteSmoke:PrintArray("BubbleSort:", array);
#WhiteSmoke:PrintLine();
#WhiteSmoke:PrintLine("Test InsertionSort");
#WhiteSmoke:array = CreateRandomArray(TEST_SIZE);
#WhiteSmoke:PrintArray("Unsorted:", array);
#WhiteSmoke:Sort.InsertionSort(array);
#WhiteSmoke:PrintArray("InsertionSort:", array);
#WhiteSmoke:PrintLine();
#WhiteSmoke:PrintLine("Test SelectionSort");
#WhiteSmoke:array = CreateRandomArray(TEST_SIZE);
#WhiteSmoke:PrintArray("Unsorted:", array);
#WhiteSmoke:Sort.SelectionSort(array);
#WhiteSmoke:PrintArray("SelectionSort:", array);
#WhiteSmoke:PrintLine();
#WhiteSmoke:PrintLine("Performance Testing");
#WhiteSmoke:PrintLine("===================");
#WhiteSmoke:PrintLine();
#WhiteSmoke:PrintLine("Machine: " + Environment.MachineName);
#WhiteSmoke:PrintLine("Version: " + Environment.Version);
#WhiteSmoke:PrintLine("Processor: Apple M2");
#WhiteSmoke:PrintLine("Processor: " + Environment.ProcessorCount + " cores");
#WhiteSmoke:PrintLine("OS: " + Environment.OSVersion);
#WhiteSmoke:PrintLine();
#LightSkyBlue:Stopwatch sw = new Stopwatch()\nint[] randomArray = CreateRandomArray(PERFORMANCE_SIZE)\nint[] arrayToSort;
#WhiteSmoke:arrayToSort = (int[])randomArray.Clone();
#WhiteSmoke:PrintLine($"{nameof(Sort.BruteForceSort)}(0...{randomArray.Length})");
#WhiteSmoke:sw.Start();
#WhiteSmoke:Sort.BruteForceSort(arrayToSort);
#WhiteSmoke:sw.Stop();
#WhiteSmoke:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
#WhiteSmoke:PrintLine();
#WhiteSmoke:arrayToSort = (int[])randomArray.Clone();
#WhiteSmoke:PrintLine($"{nameof(Sort.BubbleSort)}(0...{randomArray.Length})");
#WhiteSmoke:sw.Restart();
#WhiteSmoke:Sort.BubbleSort(arrayToSort);
#WhiteSmoke:sw.Stop();
#WhiteSmoke:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
#WhiteSmoke:PrintLine();
#WhiteSmoke:arrayToSort = (int[])randomArray.Clone();
#WhiteSmoke:PrintLine($"{nameof(Sort.InsertionSort)}(0...{randomArray.Length})");
#WhiteSmoke:sw.Restart();
#WhiteSmoke:Sort.InsertionSort(arrayToSort);
#WhiteSmoke:sw.Stop();
#WhiteSmoke:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
#WhiteSmoke:PrintLine();
#WhiteSmoke:arrayToSort = (int[])randomArray.Clone();
#WhiteSmoke:PrintLine($"{nameof(Sort.SelectionSort)}(0...{randomArray.Length})");
#WhiteSmoke:sw.Restart();
#WhiteSmoke:Sort.SelectionSort(arrayToSort);
#WhiteSmoke:sw.Stop();
#WhiteSmoke:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
#WhiteSmoke:PrintLine();
#WhiteSmoke:arrayToSort = (int[])randomArray.Clone();
#WhiteSmoke:PrintLine($"Array.Sort(0...{randomArray.Length})");
#WhiteSmoke:sw.Restart();
#WhiteSmoke:Array.Sort(arrayToSort);
#WhiteSmoke:sw.Stop();
#WhiteSmoke:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
#WhiteSmoke:PrintLine();
#WhiteSmoke:PrintLine("Exit with ENTER...");
#WhiteSmoke:ReadLine();
stop
@enduml
